{
  "name": "celeb-services",
  "version": "1.0.0",
  "description": "Celeb Plus services backend project",
  "scripts": {
    "jenkins-deploy": "STAGE=$STAGE node scripts/deploy/jenkins.js",

    "deploy-layers": "cd celeb-layers && npm run deploy-celeb-common-libs && cd ..",
    "deploy-layers-local": "npm install && cd celeb-layers && npm run local",

    "deploy": "npm run deploy-resource-api-gateway && npm run deploy-api",
    "deploy-api": "npm run deploy-api-account && npm run deploy-api-user  && npm run deploy-api-campaign && npm run deploy-api-notification && npm run deploy-api-notice && npm run deploy-api-revenueLedger && npm run deploy-api-transaction && npm run deploy-api-category && npm run deploy-api-bookmark && npm run deploy-api-dashboard",
    "deploy-api-account": "cd api-account && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-user": "cd api-user && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-event": "cd api-event && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-campaign": "cd api-campaign && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-notice": "cd api-notice && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-notification": "cd api-notification && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-bApp": "cd api-bApp && npm install && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-bApp-mac": "cd api-bApp && rm -rf node_modules && rm -rf package-lock.json && node docker-npm.js install && sls deploy -v --stage $STAGE && rm -rf node_modules && rm -rf package-lock.json && npm install && cd ..",
    "deploy-api-revenueLedger": "cd api-revenueLedger && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-rewardLedger": "cd api-rewardLedger && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-transaction": "cd api-transaction && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-mission": "cd api-mission && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-category": "cd api-category && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-dashboard": "cd api-dashboard && sls deploy -v --stage $STAGE && cd ..",
    "deploy-api-bookmark": "cd api-bookmark && sls deploy -v --stage $STAGE && cd ..",
    "deploy-resources": "STAGE=$STAGE npm run deploy-resource-s3 && STAGE=$STAGE npm run deploy-resource-api-gateway && STAGE=$STAGE npm run deploy-resource-functions-mac && cd ..",
    "deploy-resource-api-gateway": "cd resource-api-gateway && sls deploy -v --stage $STAGE && cd ..",
    "deploy-resource-functions": "cd resource-functions && sls deploy -v --stage $STAGE && sls s3deploy --stage $STAGE && cd ..",
    "deploy-resource-functions-mac": "cd resource-functions && rm -rf node_modules && rm -rf package-lock.json && node docker-npm.js install && sls deploy -v --stage $STAGE && sls s3deploy --stage $STAGE && rm -rf node_modules && rm -rf package-lock.json && cd ..",
    "deploy-resource-s3": "cd resource-s3 && sls deploy -v --stage $STAGE",

    "offline-api": "ttab STAGE=$STAGE npm run offline-api-campaign && ttab STAGE=$STAGE npm run offline-api-notice && ttab STAGE=$STAGE npm run offline-api-notification  && ttab STAGE=$STAGE npm run offline-api-transaction && ttab STAGE=$STAGE npm run offline-api-user && ttab STAGE=$STAGE npm run offline-api-category && ttab STAGE=$STAGE npm run offline-api-dashboard && ttab STAGE=$STAGE npm run offline-api-rewardLedger && ttab STAGE=$STAGE npm run offline-api-account && ttab STAGE=$STAGE npm run offline-api-bookmark",
    "offline-api-user": "cd api-user && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-event": "cd api-event && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-campaign": "cd api-campaign && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-notice": "cd api-notice && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-notification": "cd api-notification && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-bApp": "cd api-bApp && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-revenueLedger": "cd api-revenueLedger && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-rewardLedger": "cd api-rewardLedger && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-transaction": "cd api-transaction && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-mission": "cd api-mission && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-category": "cd api-category && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-dashboard": "cd api-dashboard && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-account": "cd api-account && LOCAL=true sls offline --stage $STAGE --noAuth",
    "offline-api-bookmark": "cd api-bookmark && LOCAL=true sls offline --stage $STAGE --noAuth",

    "remove-layers": "cd celeb-layers && npm run remove-celeb-common-libs && cd ..",
    "remove": "npm run remove-api && npm run remove-api-gateway",
    "remove-api-gateway": "cd resource-api-gateway && sls remove -v --stage $STAGE && cd ..",
    "remove-api": "npm run remove-api-notification && npm run remove-api-campaign && npm run remove-api-user && npm run remove-api-notice && npm run remove-api-bApp && npm run remove-api-revenueLedger && npm run remove-api-transaction && npm run remove-api-mission",
    "remove-api-user": "cd api-user && sls remove -v --stage $STAGE && cd ..",
    "remove-api-campaign": "cd api-campaign && sls remove -v --stage $STAGE && cd ..",
    "remove-api-notification": "cd api-notification && sls remove -v --stage $STAGE && cd ..",
    "remove-api-notice": "cd api-notice && sls remove -v --stage $STAGE && cd ..",
    "remove-api-bApp": "cd api-bApp && sls remove -v --stage $STAGE && cd ..",
    "remove-api-revenueLedger": "cd api-revenueLedger && sls remove -v --stage $STAGE && cd ..",
    "remove-api-transaction": "cd api-transaction && sls remove -v --stage $STAGE && cd ..",
    "remove-api-event": "cd api-event && sls remove -v --stage $STAGE && cd ..",
    "remove-api-mission": "cd api-mission && sls remove -v --stage $STAGE && cd ..",
    "remove-api-category": "cd api-category && sls remove -v --stage $STAGE && cd ..",

    "create-custom-domain": "cd resource-api-gateway && sls create_domain --stage $STAGE && cd ..",
    "merge-dependencies": "export PARENT_DIR=./ && export DEPENDENCIES_DEST=./ && node ./scripts/package-json-merger.js",
    "install-dependencies": "cd resource-api-gateway && npm install && cd ../resource-functions && npm install && cd ../resource-s3 && npm install && cd ../api-user && npm install && cd ../api-account && npm install && cd ../api-campaign && npm install && cd ../api-bApp && npm install && cd ../api-notice && npm install && cd ../api-notification && npm install && cd ../api-revenueLedger && npm install && cd ../api-transaction && npm install && cd ../api-event && npm install && cd ../scripts && npm install && cd ../api-mission && npm install && cd ../api-category && npm install && cd ../api-dashboard && npm install && cd ../api-rewardLedger && npm install && cd ../api-bookmark && npm install",
    "update-devDependencies": "cd resource-api-gateway && npm update --save-dev && cd ../api-user && npm update --save-dev && cd ../api-campaign && npm update --save-dev && cd ../api-notice && npm update --save-dev && cd ../api-notification && npm update --save-dev && cd ../api-revenueLedger && npm update --save-dev && cd ../api-transaction && npm update --save-dev && cd ..",

    "migration-prod-to-target": "cd scripts && cd migration && TARGET=$TARGET node prodToTarget.js",
    
    "test-api": "jest ./api-*/test/*.spec.js --watch",
    "test-api-user": "cd api-user && npm run test",
    "test-api-event": "cd api-event && npm run test",
    "test-api-campaign": "cd api-campaign && npm run test",
    "test-api-notice": "cd api-notice && npm run test",
    "test-api-notification": "cd api-notification && npm run test",
    "test-api-bApp": "cd api-bApp && npm run test",
    "test-api-revenueLedger": "cd api-revenueLedger && npm run test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/spinprotocol/celebplus-be"
  },
  "license": "ISC",
  "devDependencies": {},
  "dependencies": {}
}
